mippie_ppi_v1_0 <- read.table("C:\Kfir_Thesis_Asaf_Madi\Project_2 - BulkRNAseq\Circos_Code\DSA_Flow_Network_Calc\mippie_ppi_v1_0.tsv")
mippie_ppi_v1_0 <- read.table(r("C:\Kfir_Thesis_Asaf_Madi\Project_2 - BulkRNAseq\Circos_Code\DSA_Flow_Network_Calc\mippie_ppi_v1_0.tsv"))
mippie_ppi_v1_0 <- read.table(r("C:\Kfir_Thesis_Asaf_Madi\Project_2 - BulkRNAseq\Circos_Code\DSA_Flow_Network_Calc\mippie_ppi_v1_0.tsv"))
mippie_ppi_v1_0 <- read.table("r(C:\Kfir_Thesis_Asaf_Madi\Project_2 - BulkRNAseq\Circos_Code\DSA_Flow_Network_Calc\mippie_ppi_v1_0.tsv)")
mippie_ppi_v1_0 <- read.table("C:\\Kfir_Thesis_Asaf_Madi\\Project_2 - BulkRNAseq\\Circos_Code\\DSA_Flow_Network_Calc\\mippie_ppi_v1_0.tsv")
mippie_ppi_v1_0 <- read.table("C:\\Kfir_Thesis_Asaf_Madi\\Project_2 - BulkRNAseq\\Circos_Code\\DSA_Flow_Network_Calc\\mippie_ppi_v1_0.tsv", sep = '\t')
View(mippie_ppi_v1_0)
mippie_ppi_v1_0 <- read.table("C:\\Kfir_Thesis_Asaf_Madi\\Project_2 - BulkRNAseq\\Circos_Code\\DSA_Flow_Network_Calc\\mippie_ppi_v1_0.tsv", sep = '\t',header = T)
View(mippie_ppi_v1_0)
mippie_ppi_v1_0 <- mippie_ppi_v1_0[,which(colnames(mippie_ppi_v1_0) %in% c("entrezA","entrezB"))]
View(mippie_ppi_v1_0)
View(mippie_ppi_v1_0)
mippie_ppi_v1_0 <- read.table("C:\\Kfir_Thesis_Asaf_Madi\\Project_2 - BulkRNAseq\\Circos_Code\\DSA_Flow_Network_Calc\\mippie_ppi_v1_0.tsv", sep = '\t',header = T)
# Load the org.Mm.eg.db package for mouse gene annotation
library(org.Mm.eg.db)
mippie_ppi_v1_0 <- read.table("C:\\Kfir_Thesis_Asaf_Madi\\Project_2 - BulkRNAseq\\Circos_Code\\DSA_Flow_Network_Calc\\mippie_ppi_v1_0.tsv", sep = '\t',header = T)
mippie_ppi_v1_0 <- mippie_ppi_v1_0[,which(colnames(mippie_ppi_v1_0) %in% c("entrezA","entrezB"))]
# Convert entrezA to gene symbols
mippie_ppi_v1_0$entrezA <- mapIds(org.Mm.eg.db, keys = mippie_ppi_v1_0$entrezA, column = "SYMBOL", keytype = "ENTREZID")
as.character(mippie_ppi_v1_0$entrezA)
# Convert entrezA to gene symbols
mippie_ppi_v1_0$entrezA <- mapIds(org.Mm.eg.db, keys = as.character(mippie_ppi_v1_0$entrezA), column = "SYMBOL", keytype = "ENTREZID")
library(dplyr)
# Convert entrezA to gene symbols
mippie_ppi_v1_0$entrezA <- mapIds(org.Mm.eg.db, keys = as.character(mippie_ppi_v1_0$entrezA), column = "SYMBOL", keytype = "ENTREZID")
?mapIds
?mapIds
# Convert entrezA to gene symbols
mippie_ppi_v1_0$entrezA <- mapIds(org.Mm.eg.db, keys = (mippie_ppi_v1_0$entrezA), column = "SYMBOL", keytype = "ENTREZID")
gc()
# Load the org.Mm.eg.db package for mouse gene annotation
library(org.Mm.eg.db)
library(dplyr)
mippie_ppi_v1_0 <- read.table("C:\\Kfir_Thesis_Asaf_Madi\\Project_2 - BulkRNAseq\\Circos_Code\\DSA_Flow_Network_Calc\\mippie_ppi_v1_0.tsv", sep = '\t',header = T)
mippie_ppi_v1_0 <- mippie_ppi_v1_0[,which(colnames(mippie_ppi_v1_0) %in% c("entrezA","entrezB"))]
# Convert entrezA to gene symbols
mippie_ppi_v1_0$entrezA <- mapIds(org.Mm.eg.db, keys = (mippie_ppi_v1_0$entrezA), column = "SYMBOL", keytype = "ENTREZID")
library(org.Mm.eg.db)
library(dplyr)
mippie_ppi_v1_0 <- read.table("C:\\Kfir_Thesis_Asaf_Madi\\Project_2 - BulkRNAseq\\Circos_Code\\DSA_Flow_Network_Calc\\mippie_ppi_v1_0.tsv", sep = '\t',header = T)
mippie_ppi_v1_0 <- mippie_ppi_v1_0[,which(colnames(mippie_ppi_v1_0) %in% c("entrezA","entrezB"))]
# Convert entrezA to gene symbols
mippie_ppi_v1_0$entrezA <- mapIds(org.Mm.eg.db, keys = as.character(mippie_ppi_v1_0$entrezA), column = "SYMBOL", keytype = "ENTREZID")
# Convert entrezB to gene symbols
mippie_ppi_v1_0$entrezB <- mapIds(org.Mm.eg.db, keys = as.character(mippie_ppi_v1_0$entrezB), column = "SYMBOL", keytype = "ENTREZID")
gc()
# Load the org.Mm.eg.db package for mouse gene annotation
library(org.Mm.eg.db)
library(dplyr)
mippie_ppi_v1_0 <- read.table("C:\\Kfir_Thesis_Asaf_Madi\\Project_2 - BulkRNAseq\\Circos_Code\\DSA_Flow_Network_Calc\\mippie_ppi_v1_0.tsv", sep = '\t',header = T)
mippie_ppi_v1_0 <- mippie_ppi_v1_0[,which(colnames(mippie_ppi_v1_0) %in% c("entrezA","entrezB"))]
# Load the biomaRt package
library(biomaRt)
# Connect to the Ensembl BioMart database for mouse
ensembl <- useMart("ensembl", dataset = "mmusculus_gene_ensembl")
# Assume your dataframe is named df and contains columns entrezA and entrezB
# Convert entrezA to gene symbols
entrezA_genes <- getBM(attributes = c("entrezgene_id", "mgi_symbol"),
filters = "entrezgene_id",
values = mippie_ppi_v1_0$entrezA,
mart = ensembl)
# Assume your dataframe is named df and contains columns entrezA and entrezB
# Convert entrezA to gene symbols
entrezA_genes <- getBM(attributes = c("entrezgene_id", "mgi_symbol"),
filters = "entrezgene_id",
values = mippie_ppi_v1_0$entrezA,
mart = ensembl)
